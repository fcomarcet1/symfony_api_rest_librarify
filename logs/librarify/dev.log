[2021-07-19T13:55:26.790324+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/"" at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/\" at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/librarify/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2021-07-19T13:55:27.780703+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/favicon.ico" (from "http://localhost/")" at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/favicon.ico\" (from \"http://localhost/\") at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /var/www/librarify/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-07-19T14:00:48.742474+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-07-19T14:00:49.561890+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:49.838256+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:00:49.859333+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:00:49.860225+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:00:50.301555+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:00:51.519914+02:00] doctrine.DEBUG: CREATE TABLE books (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, image VARCHAR(512) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:51.587606+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:00:50+02:00",1270] []
[2021-07-19T14:00:51.665889+02:00] doctrine.DEBUG: CREATE TABLE categories (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:51.719198+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:00:51+02:00",53] []
[2021-07-19T14:00:51.728303+02:00] doctrine.DEBUG: CREATE TABLE book_category (book_id INT NOT NULL, category_id INT NOT NULL, INDEX IDX_1FB30F9816A2B381 (book_id), INDEX IDX_1FB30F9812469DE2 (category_id), PRIMARY KEY(book_id, category_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:51.795981+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9816A2B381 FOREIGN KEY (book_id) REFERENCES books (id) ON DELETE CASCADE [] []
[2021-07-19T14:00:51.931576+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9812469DE2 FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE [] []
[2021-07-19T14:00:52.068034+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:00:51+02:00",340] []
[2021-07-19T14:01:33.596975+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:01:34.007408+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:01:34.007758+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:34.857455+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:34.935131+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:38.849303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:01:40.144411+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:01:58.494451+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:01:58.750192+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:01:58.750686+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:59.070855+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:01:59.118266+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:01:59.409908+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:59.473684+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:02:02.557377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:02:03.288950+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:15:29.218407+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:15:29.642334+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:15:29.642709+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:15:30.498514+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:15:30.586662+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:15:34.180868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:15:34.422629+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0':  SQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist" at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 61 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0':\n\nSQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:61)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:132)"} []
[2021-07-19T14:15:36.481839+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:16:58.502615+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-07-19T14:16:59.222309+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:16:59.454543+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:16:59.473332+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:16:59.474110+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:16:59.872787+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:17:00.972485+02:00] doctrine.DEBUG: CREATE TABLE books (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, image VARCHAR(512) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:17:01.037022+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:16:59+02:00",1148] []
[2021-07-19T14:17:01.107736+02:00] doctrine.DEBUG: CREATE TABLE categories (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:17:01.158260+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:17:01+02:00",50] []
[2021-07-19T14:17:01.167042+02:00] doctrine.DEBUG: CREATE TABLE book_category (book_id INT NOT NULL, category_id INT NOT NULL, INDEX IDX_1FB30F9816A2B381 (book_id), INDEX IDX_1FB30F9812469DE2 (category_id), PRIMARY KEY(book_id, category_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:17:01.233224+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9816A2B381 FOREIGN KEY (book_id) REFERENCES books (id) ON DELETE CASCADE [] []
[2021-07-19T14:17:01.349755+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9812469DE2 FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE [] []
[2021-07-19T14:17:01.479203+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:17:01+02:00",312] []
[2021-07-19T14:17:18.575430+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:18.836268+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:18.836852+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:19.156116+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:19.193623+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:19.479169+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:19.536212+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:22.843136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:23.651631+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:34.192596+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:34.452649+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:34.453059+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:34.770349+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:34.792999+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:35.068656+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:35.124207+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:38.091142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:38.780925+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:47.696287+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:47.854882+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:47.855225+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:47.978027+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:47.990236+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:48.119318+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:48.149287+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:49.291326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:49.691490+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:51.696566+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:51.702489+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:51.702777+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:51.703391+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:51.703721+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:51.704253+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:51.704837+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:51.757806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:51.786514+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:53.628851+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:53.634365+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:53.634637+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:53.635305+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:53.635615+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:53.636171+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:53.636821+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:53.694972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:53.723471+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:55.020481+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:55.027176+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:55.027532+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:55.028283+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:55.028696+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:55.029316+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:55.030005+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:55.091259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:55.124423+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:19:09.937329+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:19:10.242177+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:19:10.254011+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:19:10.254423+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:19:10.254781+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:19:10.402330+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:19:10.435866+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:19:18.019490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:19:18.156091+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:19:18.170110+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 docker","2":"book_60f56dc6154090.718782 [...]"} []
[2021-07-19T14:19:18.171046+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:19:18.241389+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [1,1] []
[2021-07-19T14:19:18.242392+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:19:18.250722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [1] []
[2021-07-19T14:19:18.595779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T14:19:18.597537+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:21:25.416318+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:21:25.672087+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:21:25.682586+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:21:25.682921+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:21:25.683201+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:25.814101+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:25.843900+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:31.940273+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:21:32.068081+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:21:32.079914+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e4c0221a5.040470 [...]"} []
[2021-07-19T14:21:32.080842+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:21:32.143223+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [2,2] []
[2021-07-19T14:21:32.144192+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:21:32.152066+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [2] []
[2021-07-19T14:21:32.440873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T14:21:32.442326+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:21:45.030546+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:21:45.276842+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:21:45.287388+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:21:45.287718+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:21:45.287993+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:45.415843+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:45.445346+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:48.642903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:21:48.743607+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:21:48.749975+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e5cae5b31.542677 [...]"} []
[2021-07-19T14:21:48.750876+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:21:48.776604+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [3,3] []
[2021-07-19T14:21:48.777418+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:21:48.783980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [3] []
[2021-07-19T14:21:49.056227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T14:21:49.057680+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:08.047063+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:22:08.291408+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:08.302037+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:08.302398+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:08.302688+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:08.441436+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:08.472234+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:11.642832+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:22:11.732931+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:22:11.739604+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e73ab2db3.773340 [...]"} []
[2021-07-19T14:22:11.740672+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:22:11.770287+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [4,4] []
[2021-07-19T14:22:11.771184+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:22:11.779641+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [4] []
[2021-07-19T14:22:12.035338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T14:22:12.037249+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:20.383419+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:22:20.710100+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:20.727853+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:20.728221+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:20.728543+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:20.884749+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:20.928627+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:24.904186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:22:25.027013+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:22:25.034813+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e80f202f3.565690 [...]"} []
[2021-07-19T14:22:25.036105+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:22:25.066920+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [5,5] []
[2021-07-19T14:22:25.067956+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:22:25.075633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [5] []
[2021-07-19T14:22:25.389577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T14:22:25.391944+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:36.736659+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:22:36.919959+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:36.920382+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:37.055590+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:37.074471+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:37.253281+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:37.298037+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:38.692057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:22:39.243918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T14:22:39.267690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T14:22:39.269245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T14:22:39.270335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T14:22:39.271809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T14:22:39.281654+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:45.250277+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:22:45.258530+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:45.258989+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:45.260281+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:45.260906+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:45.261861+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:45.262640+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:45.335766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:22:45.380906+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T14:22:45.382750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T14:22:45.383907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T14:22:45.384920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T14:22:45.385932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T14:22:45.387147+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
