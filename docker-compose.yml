version: '3'

services:
    db:
        image: mysql:8.0.20
        command: --default-authentication-plugin=mysql_native_password
        container_name: mysql-8.0.20
        restart: always
        volumes:
            - "db_librarify:/var/lib/mysql"
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - 3306:3306
        networks:
            - symfony
    php:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
            args:
                TIMEZONE: ${TIMEZONE}
        container_name: php
        volumes:
            - ./librarify:/var/www/librarify:cached
            - ./logs/librarify:/var/www/librarify/var/log:cached
            - "var:/symfony/var"
            - "vendor:/symfony/vendor"
            #- ./librarify/:/var/www/librarify/
            #- ".:/app:cached"
            #- /var/www/vendor # ignore vendor map
        depends_on:
            - db
        networks:
            - symfony
    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        container_name: nginx
        restart: on-failure
        volumes:
            - ./librarify/:/var/www/librarify/
        ports:
            - 80:80
        depends_on:
            - db
            - php
        networks:
            - symfony     
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: always
        networks:
            - symfony
        ports:
            - "8080:80"
        environment:
            # arbitrary server option - allowing you to specify any MySQL/MariaDB server on the login page
            #- PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
            - PMA_USER=${MYSQL_USER}
            - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
        depends_on:
             - db

volumes:
    db_librarify:
    var:
    vendor:

networks:
    symfony:
        