[2021-07-19T13:55:26.790324+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/"" at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/\" at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/librarify/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2021-07-19T13:55:27.780703+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/favicon.ico" (from "http://localhost/")" at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/favicon.ico\" (from \"http://localhost/\") at /var/www/librarify/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /var/www/librarify/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2021-07-19T14:00:48.742474+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-07-19T14:00:49.561890+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:49.838256+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:00:49.859333+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:00:49.860225+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:00:50.301555+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:00:51.519914+02:00] doctrine.DEBUG: CREATE TABLE books (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, image VARCHAR(512) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:51.587606+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:00:50+02:00",1270] []
[2021-07-19T14:00:51.665889+02:00] doctrine.DEBUG: CREATE TABLE categories (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:51.719198+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:00:51+02:00",53] []
[2021-07-19T14:00:51.728303+02:00] doctrine.DEBUG: CREATE TABLE book_category (book_id INT NOT NULL, category_id INT NOT NULL, INDEX IDX_1FB30F9816A2B381 (book_id), INDEX IDX_1FB30F9812469DE2 (category_id), PRIMARY KEY(book_id, category_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:00:51.795981+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9816A2B381 FOREIGN KEY (book_id) REFERENCES books (id) ON DELETE CASCADE [] []
[2021-07-19T14:00:51.931576+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9812469DE2 FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE [] []
[2021-07-19T14:00:52.068034+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:00:51+02:00",340] []
[2021-07-19T14:01:33.596975+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:01:34.007408+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:01:34.007758+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:34.857455+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:34.935131+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:38.849303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:01:40.144411+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:01:58.494451+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:01:58.750192+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:01:58.750686+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:59.070855+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:01:59.118266+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:01:59.409908+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:01:59.473684+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:02:02.557377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:02:03.288950+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:15:29.218407+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:15:29.642334+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:15:29.642709+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:15:30.498514+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:15:30.586662+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:15:34.180868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:15:34.422629+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\TableNotFoundException: "An exception occurred while executing 'SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0':  SQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist" at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 61 {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0':\n\nSQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:61)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDO/Exception.php:18)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'librarify.books' doesn't exist at /var/www/librarify/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:132)"} []
[2021-07-19T14:15:36.481839+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:16:58.502615+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-07-19T14:16:59.222309+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:16:59.454543+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:16:59.473332+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:16:59.474110+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-07-19T14:16:59.872787+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:17:00.972485+02:00] doctrine.DEBUG: CREATE TABLE books (id INT AUTO_INCREMENT NOT NULL, title VARCHAR(255) NOT NULL, image VARCHAR(512) DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:17:01.037022+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:16:59+02:00",1148] []
[2021-07-19T14:17:01.107736+02:00] doctrine.DEBUG: CREATE TABLE categories (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:17:01.158260+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:17:01+02:00",50] []
[2021-07-19T14:17:01.167042+02:00] doctrine.DEBUG: CREATE TABLE book_category (book_id INT NOT NULL, category_id INT NOT NULL, INDEX IDX_1FB30F9816A2B381 (book_id), INDEX IDX_1FB30F9812469DE2 (category_id), PRIMARY KEY(book_id, category_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-07-19T14:17:01.233224+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9816A2B381 FOREIGN KEY (book_id) REFERENCES books (id) ON DELETE CASCADE [] []
[2021-07-19T14:17:01.349755+02:00] doctrine.DEBUG: ALTER TABLE book_category ADD CONSTRAINT FK_1FB30F9812469DE2 FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE [] []
[2021-07-19T14:17:01.479203+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-07-19T14:17:01+02:00",312] []
[2021-07-19T14:17:18.575430+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:18.836268+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:18.836852+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:19.156116+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:19.193623+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:19.479169+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:19.536212+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:22.843136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:23.651631+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:34.192596+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:34.452649+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:34.453059+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:34.770349+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:34.792999+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:35.068656+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:35.124207+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:38.091142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:38.780925+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:47.696287+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:47.854882+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:47.855225+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:47.978027+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:47.990236+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:48.119318+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:48.149287+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:49.291326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:49.691490+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:51.696566+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:51.702489+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:51.702777+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:51.703391+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:51.703721+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:51.704253+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:51.704837+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:51.757806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:51.786514+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:53.628851+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:53.634365+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:53.634637+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:53.635305+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:53.635615+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:53.636171+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:53.636821+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:53.694972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:53.723471+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:17:55.020481+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:17:55.027176+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:17:55.027532+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:55.028283+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:17:55.028696+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:17:55.029316+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:55.030005+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:17:55.091259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:17:55.124423+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:19:09.937329+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:19:10.242177+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:19:10.254011+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:19:10.254423+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:19:10.254781+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:19:10.402330+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:19:10.435866+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:19:18.019490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:19:18.156091+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:19:18.170110+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 docker","2":"book_60f56dc6154090.718782 [...]"} []
[2021-07-19T14:19:18.171046+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:19:18.241389+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [1,1] []
[2021-07-19T14:19:18.242392+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:19:18.250722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [1] []
[2021-07-19T14:19:18.595779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T14:19:18.597537+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:21:25.416318+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:21:25.672087+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:21:25.682586+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:21:25.682921+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:21:25.683201+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:25.814101+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:25.843900+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:31.940273+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:21:32.068081+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:21:32.079914+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e4c0221a5.040470 [...]"} []
[2021-07-19T14:21:32.080842+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:21:32.143223+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [2,2] []
[2021-07-19T14:21:32.144192+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:21:32.152066+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [2] []
[2021-07-19T14:21:32.440873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T14:21:32.442326+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:21:45.030546+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:21:45.276842+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:21:45.287388+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:21:45.287718+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:21:45.287993+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:45.415843+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:45.445346+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:21:48.642903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:21:48.743607+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:21:48.749975+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e5cae5b31.542677 [...]"} []
[2021-07-19T14:21:48.750876+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:21:48.776604+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [3,3] []
[2021-07-19T14:21:48.777418+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:21:48.783980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [3] []
[2021-07-19T14:21:49.056227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T14:21:49.057680+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:08.047063+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:22:08.291408+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:08.302037+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:08.302398+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:08.302688+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:08.441436+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:08.472234+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:11.642832+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:22:11.732931+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:22:11.739604+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e73ab2db3.773340 [...]"} []
[2021-07-19T14:22:11.740672+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:22:11.770287+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [4,4] []
[2021-07-19T14:22:11.771184+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:22:11.779641+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [4] []
[2021-07-19T14:22:12.035338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T14:22:12.037249+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:20.383419+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1/api/books","method":"POST"} []
[2021-07-19T14:22:20.710100+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:20.727853+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:20.728221+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:20.728543+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:20.884749+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:20.928627+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:24.904186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [16] []
[2021-07-19T14:22:25.027013+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T14:22:25.034813+02:00] doctrine.DEBUG: INSERT INTO books (title, image) VALUES (?, ?) {"1":"Api rest en symfony 5 dock [...]","2":"book_60f56e80f202f3.565690 [...]"} []
[2021-07-19T14:22:25.036105+02:00] doctrine.DEBUG: INSERT INTO categories (name) VALUES (?) {"1":"PHP"} []
[2021-07-19T14:22:25.066920+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [5,5] []
[2021-07-19T14:22:25.067956+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T14:22:25.075633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 WHERE t0.id = ? [5] []
[2021-07-19T14:22:25.389577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T14:22:25.391944+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:36.736659+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:22:36.919959+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:36.920382+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:37.055590+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:37.074471+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:37.253281+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:37.298037+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:38.692057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:22:39.243918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T14:22:39.267690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T14:22:39.269245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T14:22:39.270335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T14:22:39.271809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T14:22:39.281654+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T14:22:45.250277+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T14:22:45.258530+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T14:22:45.258989+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:45.260281+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T14:22:45.260906+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T14:22:45.261861+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:45.262640+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T14:22:45.335766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T14:22:45.380906+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T14:22:45.382750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T14:22:45.383907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T14:22:45.384920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T14:22:45.385932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T14:22:45.387147+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:00:52.122059+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:00:52.545301+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:00:52.545818+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:00:52.985955+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:00:53.044783+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:00:53.525815+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:00:53.616587+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:00:57.425198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:00:58.835164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:00:58.877456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:00:58.879139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:00:58.880403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:00:58.881351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:00:58.908071+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:01:04.669529+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:01:04.940266+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:01:04.940940+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:05.259331+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:01:05.292231+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:01:05.575704+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:05.629841+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:08.672239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:01:09.495294+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:01:09.528201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:01:09.529557+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:01:09.530815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:01:09.531974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:01:09.553380+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:01:11.575283+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:01:11.582284+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:01:11.582588+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:11.583496+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:01:11.584025+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:01:11.584730+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:11.585440+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:11.653333+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:01:11.692782+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:01:11.694717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:01:11.695716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:01:11.697079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:01:11.698249+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:01:11.699764+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:01:15.362722+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:01:15.525741+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:01:15.526120+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:15.651364+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:01:15.663804+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:01:15.814011+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:15.856286+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:17.241606+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:01:17.777829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:01:17.796720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:01:17.798694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:01:17.799942+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:01:17.801642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:01:17.811524+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:01:30.973374+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:01:31.159156+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:01:31.159701+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:31.308684+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:01:31.327985+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:01:31.484225+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:31.522663+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:01:32.946194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:01:33.465040+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:01:33.482764+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:01:33.484094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:01:33.485275+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:01:33.486410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:01:33.495126+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:01.422438+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:01.593144+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:01.593537+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:01.708830+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:01.720114+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:01.866408+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:01.905092+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:03.311349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:03.832040+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:08.554235+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:08.561593+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:08.561927+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:08.563244+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:08.563771+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:08.565044+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:08.566119+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:08.628091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:08.669875+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:12.314970+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:12.471612+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:12.472134+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:12.589774+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:12.601487+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:12.752277+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:12.787446+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:14.180731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:14.703681+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:17.320900+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:17.327543+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:17.327865+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:17.328517+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:17.328874+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:17.329433+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:17.330022+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:17.393894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:17.431089+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:19.966542+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:19.972396+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:19.972682+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:19.973306+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:19.973612+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:19.974139+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:19.974697+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:20.025271+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:20.058236+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:21.283648+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:21.289179+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:21.289510+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:21.290157+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:21.290510+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:21.291067+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:21.291655+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:21.344324+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:21.377907+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:23.791936+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:23.920818+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:23.921131+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:24.021976+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:24.031928+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:24.157695+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:24.186673+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:25.306220+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:25.752531+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:29.575750+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:29.584610+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:29.585187+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:29.585983+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:29.586508+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:29.587187+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:29.587981+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:29.653656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:29.692992+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:31.184776+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:31.191351+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:31.191677+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:31.192391+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:31.192764+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:31.193429+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:31.194129+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:31.261676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:31.301962+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:02:32.678129+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:02:32.684614+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:02:32.684939+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:32.685623+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:02:32.685993+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:02:32.686633+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:32.687378+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:02:32.746762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:02:32.785832+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:25.124075+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:25.535921+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:25.536287+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:26.383491+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:26.466758+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:30.169266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:31.513094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:31.554632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:31.555947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:31.556920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:31.557863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:31.585638+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:37.647720+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:37.888210+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:37.888632+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:38.207384+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:38.249518+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:38.534928+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:38.587140+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:41.585310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:42.403000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:42.439987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:42.441921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:42.442857+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:42.444287+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:42.462239+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:44.289862+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:44.296351+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:44.296699+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:44.297554+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:44.297970+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:44.298582+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:44.299307+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:44.363950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:44.403456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:44.405121+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:44.406101+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:44.407051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:44.408092+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:44.409308+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:47.648761+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:47.818523+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:47.819128+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:47.946369+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:47.958360+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:48.116172+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:48.158061+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:49.575666+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:50.111038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:50.129378+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:50.130600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:50.131795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:50.132901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:50.142015+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:51.817840+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:51.823294+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:51.823561+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:51.824183+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:51.824535+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:51.825113+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:51.825739+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:51.878026+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:51.911387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:51.912831+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:51.913627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:51.914439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:51.915379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:51.916499+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:53.228644+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:53.234611+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:53.234914+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:53.235646+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:53.236023+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:53.236612+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:53.237317+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:53.292158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:53.328447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:53.329962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:53.330775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:53.331607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:53.332537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:53.333594+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:54.509350+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:54.515289+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:54.515578+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:54.516234+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:54.516554+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:54.517118+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:54.517694+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:54.569337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:54.603281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:54.604813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:54.605647+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:54.606424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:54.607281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:54.608287+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:55.685857+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:55.691530+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:55.691814+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:55.692518+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:55.692885+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:55.693593+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:55.694349+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:55.747098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:13:55.781626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:13:55.783369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:13:55.784504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:13:55.785335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:13:55.786133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:13:55.787153+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:13:58.084604+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T17:13:58.219473+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:13:58.219806+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:58.328198+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:13:58.351171+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:13:58.476970+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:58.506341+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:13:59.650199+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T17:14:00.093103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T17:14:00.106566+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T17:14:00.107611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T17:14:00.108404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T17:14:00.109195+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T17:14:00.116940+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:58:40.629424+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:58:40.634004+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:58:40.634626+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:58:40.635228+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:58:43.099734+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"14"},"request_uri":"http://127.0.0.1/api/categories/14","method":"POST"} []
[2021-07-19T17:58:43.246666+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:58:43.247125+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:58:43.247493+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:58:43.247844+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:58:43.445495+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:58:43.490615+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:58:45.303436+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [14] []
[2021-07-19T17:58:45.679693+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T17:59:23.782049+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:59:23.823584+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:59:23.824130+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:59:23.824704+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T17:59:25.727631+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T17:59:25.918193+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T17:59:25.918569+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:59:26.190904+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T17:59:26.216105+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T17:59:26.479897+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:59:26.528474+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T17:59:28.845147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T17:59:29.531990+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:00:10.108963+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"2"},"request_uri":"http://127.0.0.1/api/categories/2","method":"POST"} []
[2021-07-19T18:00:10.508484+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:00:10.532465+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:00:10.532815+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:00:10.533117+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:00:10.666285+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:00:10.695374+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:00:11.274461+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:00:12.424096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [2] []
[2021-07-19T18:00:12.592392+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Form\Exception\InvalidArgumentException: "Could not load type "App\Service\CategoryFormType": class does not exist." at /var/www/librarify/vendor/symfony/form/FormRegistry.php line 85 {"exception":"[object] (Symfony\\Component\\Form\\Exception\\InvalidArgumentException(code: 0): Could not load type \"App\\Service\\CategoryFormType\": class does not exist. at /var/www/librarify/vendor/symfony/form/FormRegistry.php:85)"} []
[2021-07-19T18:00:13.191508+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:01:28.821152+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"2"},"request_uri":"http://127.0.0.1/api/categories/2","method":"POST"} []
[2021-07-19T18:01:29.095241+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:01:29.105598+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:01:29.105928+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:01:29.106211+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:01:29.235162+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:01:29.264391+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:01:29.765318+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:01:30.682471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [2] []
[2021-07-19T18:01:35.635542+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T18:01:35.636209+02:00] doctrine.DEBUG: UPDATE categories SET name = ? WHERE id = ? ["Docker",2] []
[2021-07-19T18:01:35.637095+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T18:01:35.885286+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:02:38.631110+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"3"},"request_uri":"http://127.0.0.1/api/categories/3","method":"POST"} []
[2021-07-19T18:02:38.877180+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:02:38.887540+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:02:38.887849+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:02:38.888140+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:02:39.017122+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:02:39.046927+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:02:39.350866+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:02:40.261212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [3] []
[2021-07-19T18:02:44.774500+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T18:02:44.775261+02:00] doctrine.DEBUG: UPDATE categories SET name = ? WHERE id = ? ["JavaScript",3] []
[2021-07-19T18:02:44.776162+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T18:02:45.049802+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:04:17.460311+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"4"},"request_uri":"http://127.0.0.1/api/categories/4","method":"POST"} []
[2021-07-19T18:04:17.741716+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:04:17.753207+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:04:17.753571+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:04:17.753990+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:17.899846+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:17.933403+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:18.283958+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:04:19.347507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [4] []
[2021-07-19T18:04:21.567316+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T18:04:21.568181+02:00] doctrine.DEBUG: UPDATE categories SET name = ? WHERE id = ? ["Golang",4] []
[2021-07-19T18:04:21.569305+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T18:04:21.866385+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:04:28.576846+02:00] request.INFO: Matched route "app_api_category_get". {"route":"app_api_category_get","route_parameters":{"_route":"app_api_category_get","_controller":"App\\Controller\\Api\\CategoryController::getAction"},"request_uri":"http://127.0.0.1/api/categories","method":"GET"} []
[2021-07-19T18:04:28.707288+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:04:28.707618+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:28.809526+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:04:28.820294+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:04:28.948092+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:28.977756+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:29.286343+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:04:30.155344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 [] []
[2021-07-19T18:04:30.595405+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:04:48.420445+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"6"},"request_uri":"http://127.0.0.1/api/categories/6","method":"POST"} []
[2021-07-19T18:04:48.669275+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:04:48.679441+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:04:48.679760+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:04:48.680059+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:48.809835+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:48.838671+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:04:49.149819+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:04:50.053511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [6] []
[2021-07-19T18:04:50.441505+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:05:11.911795+02:00] request.INFO: Matched route "app_api_category_edit". {"route":"app_api_category_edit","route_parameters":{"_route":"app_api_category_edit","_controller":"App\\Controller\\Api\\CategoryController::editAction","id":"5"},"request_uri":"http://127.0.0.1/api/categories/5","method":"POST"} []
[2021-07-19T18:05:12.193729+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:05:12.205605+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:05:12.205973+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:05:12.206295+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:05:12.353216+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:05:12.387004+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:05:12.735657+02:00] php.INFO: User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to "Symfony\Component\Routing\Annotation\Route::__construct" is deprecated. Use named arguments instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/routing 5.3: Passing an array as first argument to \"Symfony\\Component\\Routing\\Annotation\\Route::__construct\" is deprecated. Use named arguments instead. at /var/www/librarify/vendor/symfony/routing/Annotation/Route.php:80)"} []
[2021-07-19T18:05:13.808714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 WHERE t0.id = ? [5] []
[2021-07-19T18:05:16.017006+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-07-19T18:05:16.017798+02:00] doctrine.DEBUG: UPDATE categories SET name = ? WHERE id = ? ["C++",5] []
[2021-07-19T18:05:16.018774+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-07-19T18:05:16.325556+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-07-19T18:05:23.637448+02:00] request.INFO: Matched route "app_api_book_get". {"route":"app_api_book_get","route_parameters":{"_route":"app_api_book_get","_controller":"App\\Controller\\Api\\BookController::getAction"},"request_uri":"http://127.0.0.1/api/books","method":"GET"} []
[2021-07-19T18:05:23.788970+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-07-19T18:05:23.789359+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:05:23.909277+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-07-19T18:05:23.921170+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-07-19T18:05:24.068712+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:05:24.102378+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-07-19T18:05:25.414955+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.title AS title_2, t0.image AS image_3 FROM books t0 [] []
[2021-07-19T18:05:25.926544+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [1] []
[2021-07-19T18:05:25.950044+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [2] []
[2021-07-19T18:05:25.951298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [3] []
[2021-07-19T18:05:25.952222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [4] []
[2021-07-19T18:05:25.953140+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM categories t0 INNER JOIN book_category ON t0.id = book_category.category_id WHERE book_category.book_id = ? [5] []
[2021-07-19T18:05:25.954377+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T08:02:03.828584+02:00] console.DEBUG: Command "make:entity" exited with code "1" {"command":"make:entity","code":1} []
[2021-08-02T08:02:46.989926+02:00] console.CRITICAL: Error thrown while running command "doctrine:mapping:convert annotation". Message: "Not enough arguments (missing: "dest-path")." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Not enough arguments (missing: \"dest-path\"). at /var/www/librarify/vendor/symfony/console/Input/Input.php:76)","command":"doctrine:mapping:convert annotation","message":"Not enough arguments (missing: \"dest-path\")."} []
[2021-08-02T08:02:46.990344+02:00] console.DEBUG: Command "doctrine:mapping:convert annotation" exited with code "1" {"command":"doctrine:mapping:convert annotation","code":1} []
[2021-08-02T08:04:35.123557+02:00] console.CRITICAL: Error thrown while running command "doctrine:mapping:convert annotation './src/Entity'". Message: "Notice: Trying to get property 'name' of non-object" {"exception":"[object] (ErrorException(code: 0): Notice: Trying to get property 'name' of non-object at /var/www/librarify/vendor/doctrine/orm/lib/Doctrine/ORM/Mapping/ClassMetadataInfo.php:3635)","command":"doctrine:mapping:convert annotation './src/Entity'","message":"Notice: Trying to get property 'name' of non-object"} []
[2021-08-02T08:04:35.124883+02:00] console.DEBUG: Command "doctrine:mapping:convert annotation './src/Entity'" exited with code "1" {"command":"doctrine:mapping:convert annotation './src/Entity'","code":1} []
[2021-08-02T08:51:39.571033+02:00] php.CRITICAL: Fatal Compile Error: Cannot declare class App\Entity\Category, because the name is already in use {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\FatalError(code: 0): Compile Error: Cannot declare class App\\Entity\\Category, because the name is already in use at /var/www/librarify/src/Entity/Author.php:10)"} []
[2021-08-02T09:52:16.524082+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T09:52:16.529510+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T09:52:16.536112+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:16.539528+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:16.544249+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:16.547461+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T09:52:16.549582+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T09:52:16.552895+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T09:52:16.554524+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T09:52:16.556193+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:16.557921+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:16.560212+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:16.561704+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T09:52:16.563331+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T09:52:17.887065+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T09:52:17.890344+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'book_category' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:17.893196+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'book_category' */ WHERE k.table_name = 'book_category' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:17.913484+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'book_category' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:17.915182+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'book_category' [] []
[2021-08-02T09:52:17.916593+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'books' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:17.918191+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'books' */ WHERE k.table_name = 'books' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:17.919897+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'books' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:17.921073+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'books' [] []
[2021-08-02T09:52:17.922329+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:17.923682+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:17.925311+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:17.926606+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2021-08-02T09:52:17.927952+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:17.929360+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:17.931054+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:17.932296+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T09:52:37.558499+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T09:52:37.567030+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T09:52:37.569457+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T09:52:37.572104+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T09:52:37.573529+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T09:52:37.579644+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T09:52:37.580632+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T09:52:39.468611+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T09:52:39.478361+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T09:52:39.497728+02:00] doctrine.DEBUG: CREATE TABLE authors (id CHAR(36) NOT NULL COMMENT '(DC2Type:uuid)', name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-08-02T09:52:39.590443+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-08-02T09:52:39+02:00",32] []
[2021-08-02T09:52:39.594074+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T09:59:11.629366+02:00] request.INFO: Matched route "app_api_author_get". {"route":"app_api_author_get","route_parameters":{"_route":"app_api_author_get","_controller":"App\\Controller\\Api\\AuthorController::getAction"},"request_uri":"http://127.0.0.1:8080/api/authors","method":"GET"} []
[2021-08-02T09:59:11.632818+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T09:59:11.632905+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T09:59:11.639821+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T09:59:11.640737+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T09:59:11.708590+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM authors t0 [] []
[2021-08-02T09:59:11.730306+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:00:29.563215+02:00] request.INFO: Matched route "app_api_author_post". {"route":"app_api_author_post","route_parameters":{"_route":"app_api_author_post","_controller":"App\\Controller\\Api\\AuthorController::postAction"},"request_uri":"http://127.0.0.1:8080/api/authors","method":"POST"} []
[2021-08-02T10:00:29.565353+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:00:29.565524+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:00:29.565607+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:00:29.565671+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:00:29.566445+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:00:29.567338+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:00:29.585478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM authors t0 WHERE t0.name = ? ["Pepe Lotas"] []
[2021-08-02T10:00:29.678302+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:00:29.680922+02:00] doctrine.DEBUG: INSERT INTO authors (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"66bafca8-2e91-489d-9e55-22687e33cec4"},"2":"Pepe Lotas"} []
[2021-08-02T10:00:29.681453+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:00:29.688665+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:05:34.502710+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T10:05:34.508731+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T10:05:34.515579+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:34.518941+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:34.522706+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:34.524359+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T10:05:34.526264+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T10:05:34.530035+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T10:05:34.531761+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T10:05:34.533474+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:34.534971+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:34.536701+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:34.537912+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T10:05:34.539253+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T10:05:36.058108+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T10:05:36.061016+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'authors' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:36.063377+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'authors' */ WHERE k.table_name = 'authors' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:36.065269+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'authors' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:36.066653+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'authors' [] []
[2021-08-02T10:05:36.068480+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'book_category' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:36.070016+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'book_category' */ WHERE k.table_name = 'book_category' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:36.085638+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'book_category' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:36.087221+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'book_category' [] []
[2021-08-02T10:05:36.088585+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'books' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:36.090311+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'books' */ WHERE k.table_name = 'books' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:36.092059+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'books' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:36.093213+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'books' [] []
[2021-08-02T10:05:36.094509+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'categories' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:36.095822+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'categories' */ WHERE k.table_name = 'categories' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:36.097610+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'categories' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:36.098862+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'categories' [] []
[2021-08-02T10:05:36.100150+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:36.101505+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:36.103239+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:36.104492+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T10:05:43.287798+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2021-08-02T10:05:43.296480+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'librarify' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2021-08-02T10:05:43.298960+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'librarify' /*!50116 AND c.constraint_schema = 'librarify' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2021-08-02T10:05:43.301852+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'librarify' ORDER BY SEQ_IN_INDEX ASC [] []
[2021-08-02T10:05:43.303182+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2021-08-02T10:05:43.309171+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T10:05:43.310111+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T10:06:41.471198+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2021-08-02T10:06:41.477075+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:06:41.495967+02:00] doctrine.DEBUG: CREATE TABLE book_author (book_id CHAR(36) NOT NULL COMMENT '(DC2Type:uuid)', author_id CHAR(36) NOT NULL COMMENT '(DC2Type:uuid)', INDEX IDX_9478D34516A2B381 (book_id), INDEX IDX_9478D345F675F31B (author_id), PRIMARY KEY(book_id, author_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2021-08-02T10:06:41.516052+02:00] doctrine.DEBUG: ALTER TABLE book_author ADD CONSTRAINT FK_9478D34516A2B381 FOREIGN KEY (book_id) REFERENCES books (id) ON DELETE CASCADE [] []
[2021-08-02T10:06:41.550086+02:00] doctrine.DEBUG: ALTER TABLE book_author ADD CONSTRAINT FK_9478D345F675F31B FOREIGN KEY (author_id) REFERENCES authors (id) ON DELETE CASCADE [] []
[2021-08-02T10:06:41.584006+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2021-08-02T10:06:41+02:00",106] []
[2021-08-02T10:06:41.586539+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:08:31.567068+02:00] request.INFO: Matched route "app_api_author_delete". {"route":"app_api_author_delete","route_parameters":{"_route":"app_api_author_delete","_controller":"App\\Controller\\Api\\AuthorController::deleteAction","id":"66bafca8-2e91-489d-9e55-22687e33cec4"},"request_uri":"http://127.0.0.1:8080/api/authors/66bafca8-2e91-489d-9e55-22687e33cec4","method":"DELETE"} []
[2021-08-02T10:08:31.569455+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:08:31.569679+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:08:31.569786+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:08:31.569882+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:08:31.570706+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:08:31.571392+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:08:31.580930+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2 FROM authors t0 WHERE t0.id = ? [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"66bafca8-2e91-489d-9e55-22687e33cec4"}] []
[2021-08-02T10:08:31.585031+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:08:31.585985+02:00] doctrine.DEBUG: DELETE FROM book_author WHERE author_id = ? [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"66bafca8-2e91-489d-9e55-22687e33cec4"}] []
[2021-08-02T10:08:31.586408+02:00] doctrine.DEBUG: DELETE FROM authors WHERE id = ? [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"66bafca8-2e91-489d-9e55-22687e33cec4"}] []
[2021-08-02T10:08:31.586977+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:08:31.591970+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:13:29.978925+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1:8080/api/books","method":"POST"} []
[2021-08-02T10:13:29.981589+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:13:29.981767+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:13:29.981867+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:13:29.981926+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:13:29.982792+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:13:29.983450+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:13:30.010467+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Can't get a way to read the property "authors" in class "App\Form\Model\BookDto"." at /var/www/librarify/vendor/symfony/property-access/PropertyAccessor.php line 498 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"authors\" in class \"App\\Form\\Model\\BookDto\". at /var/www/librarify/vendor/symfony/property-access/PropertyAccessor.php:498)"} []
[2021-08-02T10:13:30.017102+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:16:00.850439+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1:8080/api/books","method":"POST"} []
[2021-08-02T10:16:00.852684+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:16:00.852852+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:16:00.852936+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:16:00.853010+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:16:00.853661+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:16:00.854150+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:16:01.004677+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:16:01.005706+02:00] doctrine.DEBUG: INSERT INTO categories (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"cbaecfd4-6e17-442a-92f2-ba725a532342"},"2":"Novela Gitana"} []
[2021-08-02T10:16:01.006309+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:16:01.012175+02:00] php.CRITICAL: Uncaught Error: Argument 6 passed to App\Entity\Book::create() must be of the type array, object given, called in /var/www/librarify/src/Service/Book/BookFormProcessor.php on line 101 {"exception":"[object] (TypeError(code: 0): Argument 6 passed to App\\Entity\\Book::create() must be of the type array, object given, called in /var/www/librarify/src/Service/Book/BookFormProcessor.php on line 101 at /var/www/librarify/src/Entity/Book.php:48)"} []
[2021-08-02T10:16:01.012832+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 6 passed to App\Entity\Book::create() must be of the type array, object given, called in /var/www/librarify/src/Service/Book/BookFormProcessor.php on line 101" at /var/www/librarify/src/Entity/Book.php line 48 {"exception":"[object] (TypeError(code: 0): Argument 6 passed to App\\Entity\\Book::create() must be of the type array, object given, called in /var/www/librarify/src/Service/Book/BookFormProcessor.php on line 101 at /var/www/librarify/src/Entity/Book.php:48)"} []
[2021-08-02T10:16:01.016265+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:26:15.368218+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1:8080/api/books","method":"POST"} []
[2021-08-02T10:26:15.370634+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:26:15.370758+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:26:15.370876+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:26:15.370955+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:26:15.372453+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:26:15.373159+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:26:15.436487+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:26:15.437481+02:00] doctrine.DEBUG: INSERT INTO categories (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"d8d8238f-94d9-46e9-9aca-10a9f467d19e"},"2":"Novela Gitana"} []
[2021-08-02T10:26:15.438038+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:26:15.440600+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:26:15.440932+02:00] doctrine.DEBUG: INSERT INTO authors (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"b73dd71c-9d39-4148-bd7c-c6720f605e31"},"2":"El farina"} []
[2021-08-02T10:26:15.441437+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:26:15.444382+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:26:15.444833+02:00] doctrine.DEBUG: INSERT INTO books (id, title, image, description, created_at, read_at, score_value) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"d70473aa-2d62-46c9-84f2-7350da3369cf"},"2":"Un mundo feliz vol 7","3":"book_6107ac276c5c61.178398 [...]","4":"Test description","5":"2021-08-02T10:26:15+02:00","6":"1990-10-26T00:00:00+01:00","7":3} []
[2021-08-02T10:26:15.450100+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"d70473aa-2d62-46c9-84f2-7350da3369cf"},{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"d8d8238f-94d9-46e9-9aca-10a9f467d19e"}] []
[2021-08-02T10:26:15.450906+02:00] doctrine.DEBUG: INSERT INTO book_author (book_id, author_id) VALUES (?, ?) [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"d70473aa-2d62-46c9-84f2-7350da3369cf"},{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"b73dd71c-9d39-4148-bd7c-c6720f605e31"}] []
[2021-08-02T10:26:15.451552+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:26:15.456608+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:27:26.762769+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1:8080/api/books","method":"POST"} []
[2021-08-02T10:27:26.767268+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:27:26.767472+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:27:26.767563+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:27:26.767632+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:27:26.769676+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:27:26.770587+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:27:26.831122+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:27:26.832128+02:00] doctrine.DEBUG: INSERT INTO categories (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"b093c62a-88d1-453a-9385-01c684b8ac9f"},"2":"Novela Gitana"} []
[2021-08-02T10:27:26.832718+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:27:26.835602+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:27:26.835918+02:00] doctrine.DEBUG: INSERT INTO authors (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"0c55a972-d166-4263-831d-7c842a80e6ce"},"2":"El farina"} []
[2021-08-02T10:27:26.836490+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:27:26.839282+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:27:26.839642+02:00] doctrine.DEBUG: INSERT INTO books (id, title, image, description, created_at, read_at, score_value) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"223bc99c-e27e-42e8-8c24-dff4db034cd8"},"2":"Un mundo feliz vol 8","3":"book_6107ac6ecccf51.761668 [...]","4":"Test description","5":"2021-08-02T10:27:26+02:00","6":"1990-10-26T00:00:00+01:00","7":3} []
[2021-08-02T10:27:26.840467+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"223bc99c-e27e-42e8-8c24-dff4db034cd8"},{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"b093c62a-88d1-453a-9385-01c684b8ac9f"}] []
[2021-08-02T10:27:26.841082+02:00] doctrine.DEBUG: INSERT INTO book_author (book_id, author_id) VALUES (?, ?) [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"223bc99c-e27e-42e8-8c24-dff4db034cd8"},{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"0c55a972-d166-4263-831d-7c842a80e6ce"}] []
[2021-08-02T10:27:26.841657+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:27:26.847462+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2021-08-02T10:27:50.705605+02:00] request.INFO: Matched route "app_api_book_post". {"route":"app_api_book_post","route_parameters":{"_route":"app_api_book_post","_controller":"App\\Controller\\Api\\BookController::postAction"},"request_uri":"http://127.0.0.1:8080/api/books","method":"POST"} []
[2021-08-02T10:27:50.709809+02:00] security.DEBUG: Read existing security token from the session. {"key":"_security_api","token_class":"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken"} []
[2021-08-02T10:27:50.709994+02:00] security.DEBUG: User was reloaded from a user provider. {"provider":"App\\Security\\UserProvider","username":""} []
[2021-08-02T10:27:50.710091+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2021-08-02T10:27:50.710150+02:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:27:50.712139+02:00] security.INFO: Authenticator successful! {"token":{"Symfony\\Component\\Security\\Http\\Authenticator\\Token\\PostAuthenticationToken":"PostAuthenticationToken(user=\"\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:27:50.713195+02:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"App\\Security\\ApiKeyAuthenticator"} []
[2021-08-02T10:27:50.782778+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:27:50.783712+02:00] doctrine.DEBUG: INSERT INTO categories (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"746b49fe-1a7e-430e-9167-d823f7b0c625"},"2":"Novela Gitana"} []
[2021-08-02T10:27:50.784330+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:27:50.787147+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:27:50.787472+02:00] doctrine.DEBUG: INSERT INTO authors (id, name) VALUES (?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"4c2943b4-25dc-4cb3-8c79-1c5879c6c398"},"2":"El farina"} []
[2021-08-02T10:27:50.787944+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:27:50.790804+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2021-08-02T10:27:50.791174+02:00] doctrine.DEBUG: INSERT INTO books (id, title, image, description, created_at, read_at, score_value) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"cb7f9b5c-1caf-4198-86cb-891c52ad8de2"},"2":"Un mundo feliz vol 9","3":"book_6107ac86c0f8b4.061870 [...]","4":"Test description","5":"2021-08-02T10:27:50+02:00","6":"1990-10-26T00:00:00+01:00","7":3} []
[2021-08-02T10:27:50.791904+02:00] doctrine.DEBUG: INSERT INTO book_category (book_id, category_id) VALUES (?, ?) [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"cb7f9b5c-1caf-4198-86cb-891c52ad8de2"},{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"746b49fe-1a7e-430e-9167-d823f7b0c625"}] []
[2021-08-02T10:27:50.792487+02:00] doctrine.DEBUG: INSERT INTO book_author (book_id, author_id) VALUES (?, ?) [{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"cb7f9b5c-1caf-4198-86cb-891c52ad8de2"},{"Ramsey\\Uuid\\Lazy\\LazyUuidFromString":"4c2943b4-25dc-4cb3-8c79-1c5879c6c398"}] []
[2021-08-02T10:27:50.792953+02:00] doctrine.DEBUG: "COMMIT" [] []
[2021-08-02T10:27:50.798855+02:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
